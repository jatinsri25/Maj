{"ast":null,"code":"var _jsxFileName = \"/Applications/Maj/Major Project/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaRegCalendarAlt, FaRegFlag, FaRegCommentDots, FaUserCircle, FaChartBar, FaEdit, FaTrash } from \"react-icons/fa\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUS_COLORS = {\n  Active: \"#4CAF50\",\n  Closed: \"#F44336\",\n  Upcoming: \"#2196F3\",\n  Default: \"#9E9E9E\"\n};\nconst NEWS_API_KEY = \"8280846cdd1a49ef880809767d0e61c8\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const chatEndRef = useRef(null);\n\n  // States\n  const [currentUser] = useState({\n    id: 1,\n    name: \"Alice Smith\",\n    isAdmin: true\n  });\n  const [elections, setElections] = useState(() => {\n    const saved = localStorage.getItem('elections');\n    return saved ? JSON.parse(saved) : [{\n      id: 1,\n      name: \"Student Council Election\",\n      status: \"Active\",\n      description: \"Vote for your student representatives\",\n      endDate: \"2024-12-20\",\n      candidates: [{\n        id: 1,\n        name: \"John Doe\",\n        position: \"President\",\n        votes: 145\n      }, {\n        id: 2,\n        name: \"Jane Smith\",\n        position: \"Vice President\",\n        votes: 120\n      }],\n      voters: []\n    }, {\n      id: 2,\n      name: \"Company Representative Election\",\n      status: \"Closed\",\n      description: \"Annual company board selection\",\n      endDate: \"2024-11-30\",\n      candidates: [{\n        id: 3,\n        name: \"Mike Johnson\",\n        position: \"Board Member\",\n        votes: 89\n      }, {\n        id: 4,\n        name: \"Sarah Williams\",\n        position: \"Board Member\",\n        votes: 92\n      }],\n      voters: []\n    }];\n  });\n  const [selectedElection, setSelectedElection] = useState(null);\n  const [editingElection, setEditingElection] = useState(null);\n  const [news, setNews] = useState([]);\n  const [isLoadingNews, setIsLoadingNews] = useState(true);\n  const [comments, setComments] = useState(() => {\n    const saved = localStorage.getItem('comments');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [newComment, setNewComment] = useState(\"\");\n  const [showCandidates, setShowCandidates] = useState(false);\n  const [chatMessages, setChatMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    return saved ? JSON.parse(saved) : [{\n      id: 1,\n      user: \"System\",\n      message: \"Welcome to the election discussion!\",\n      timestamp: new Date()\n    }];\n  });\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // LocalStorage persistence\n  useEffect(() => {\n    localStorage.setItem('elections', JSON.stringify(elections));\n  }, [elections]);\n  useEffect(() => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n  }, [comments]);\n  useEffect(() => {\n    localStorage.setItem('chatMessages', JSON.stringify(chatMessages));\n  }, [chatMessages]);\n\n  // Update time every minute for countdown\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fetch news effect\n  useEffect(() => {\n    const fetchNews = async () => {\n      setIsLoadingNews(true);\n      try {\n        const response = await fetch(`https://newsapi.org/v2/everything?q=election&language=en&sortBy=publishedAt&pageSize=6&apiKey=${NEWS_API_KEY}`);\n        const data = await response.json();\n        if (data.articles) {\n          const formattedNews = data.articles.map((article, index) => ({\n            id: index + 1,\n            title: article.title,\n            description: article.description || \"No description available\",\n            imageUrl: article.urlToImage || \"https://via.placeholder.com/350x200\",\n            url: article.url,\n            source: article.source.name,\n            publishedAt: new Date(article.publishedAt).toLocaleDateString()\n          }));\n          setNews(formattedNews);\n        }\n      } catch (error) {\n        console.error(\"Error fetching news:\", error);\n        setNews([{\n          id: 1,\n          title: \"Election Updates\",\n          description: \"Stay informed about the latest election news\",\n          imageUrl: \"https://via.placeholder.com/350x200\",\n          source: \"Local News\",\n          publishedAt: new Date().toLocaleDateString()\n        }]);\n      } finally {\n        setIsLoadingNews(false);\n      }\n    };\n    fetchNews();\n  }, []);\n\n  // Scroll chat to bottom effect\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [chatMessages]);\n\n  // Helper functions\n  const calculateTimeRemaining = endDate => {\n    const end = new Date(endDate);\n    const diff = end - currentTime;\n    if (diff <= 0) return \"Ended\";\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n    return `${days}d ${hours}h ${minutes}m left`;\n  };\n  const getStatusColor = status => STATUS_COLORS[status] || STATUS_COLORS.Default;\n\n  // Election management\n  const addElection = () => {\n    const newElection = {\n      id: Date.now(),\n      name: `New Election ${elections.length + 1}`,\n      status: \"Upcoming\",\n      description: \"Click to add description\",\n      endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      candidates: [],\n      voters: []\n    };\n    setElections(prev => [...prev, newElection]);\n  };\n  const handleDeleteElection = id => {\n    if (window.confirm(\"Are you sure you want to delete this election?\")) {\n      setElections(prev => prev.filter(e => e.id !== id));\n      if ((selectedElection === null || selectedElection === void 0 ? void 0 : selectedElection.id) === id) {\n        setSelectedElection(null);\n        setShowCandidates(false);\n      }\n    }\n  };\n  const handleSaveElection = () => {\n    setElections(prev => prev.map(e => e.id === editingElection.id ? editingElection : e));\n    setEditingElection(null);\n  };\n\n  // Voting functionality\n  const handleVote = candidateId => {\n    if (!currentUser) {\n      alert(\"Please log in to vote!\");\n      return;\n    }\n    const electionIndex = elections.findIndex(e => e.id === selectedElection.id);\n    if (electionIndex === -1) return;\n    const election = elections[electionIndex];\n    if (election.voters.includes(currentUser.id)) {\n      alert(\"You've already voted in this election!\");\n      return;\n    }\n    const updatedCandidates = election.candidates.map(candidate => candidate.id === candidateId ? {\n      ...candidate,\n      votes: candidate.votes + 1\n    } : candidate);\n    const updatedElection = {\n      ...election,\n      candidates: updatedCandidates,\n      voters: [...election.voters, currentUser.id]\n    };\n    const updatedElections = [...elections];\n    updatedElections[electionIndex] = updatedElection;\n    setElections(updatedElections);\n    setSelectedElection(updatedElection);\n  };\n\n  // Comment and chat functions\n  const handleAddComment = () => {\n    if (!newComment.trim()) return;\n    const commentToAdd = {\n      id: Date.now(),\n      text: newComment.trim(),\n      user: currentUser.name,\n      timestamp: new Date(),\n      likes: 0\n    };\n    setComments(prev => [...prev, commentToAdd]);\n    setNewComment(\"\");\n  };\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    const messageToAdd = {\n      id: Date.now(),\n      user: currentUser.name,\n      message: newMessage.trim(),\n      timestamp: new Date()\n    };\n    setChatMessages(prev => [...prev, messageToAdd]);\n    setNewMessage(\"\");\n  };\n  const handleLikeComment = commentId => {\n    setComments(prev => prev.map(comment => comment.id === commentId ? {\n      ...comment,\n      likes: (comment.likes || 0) + 1\n    } : comment));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Decentralized Voting System Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [currentUser.name, \" \", currentUser.isAdmin && \"(Admin)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"election-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Available Elections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), currentUser.isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"auth-button add-election-btn\",\n            onClick: addElection,\n            children: \"Add Election\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"election-cards\",\n          children: elections.map(election => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"election-card interactive\",\n            onClick: () => setSelectedElection(election),\n            style: {\n              borderLeft: `5px solid ${getStatusColor(election.status)}`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"election-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: election.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"description\",\n                children: election.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"election-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"end-date\",\n                  children: calculateTimeRemaining(election.endDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"status\",\n                  style: {\n                    color: getStatusColor(election.status)\n                  },\n                  children: election.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this), currentUser.isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"election-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  setEditingElection(election);\n                },\n                children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-button\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteElection(election.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 37\n            }, this)]\n          }, election.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"news-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Latest Election News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-cards\",\n          children: isLoadingNews ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Loading news...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this) : news.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-card\",\n            onClick: () => window.open(item.url, '_blank'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.imageUrl,\n              alt: `News about ${item.title}`,\n              className: \"news-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.publishedAt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Live Discussion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: [chatMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat-message ${msg.user === \"System\" ? \"system\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [msg.user, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: new Date(msg.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 37\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: chatEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              placeholder: \"Type your message...\",\n              onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              className: \"auth-button\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"comments-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Voter Opinions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-display\",\n          children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-header\",\n              children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n                className: \"user-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"username\",\n                children: comment.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: new Date(comment.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"like-button\",\n                onClick: () => handleLikeComment(comment.id),\n                children: [\"\\uD83D\\uDC4D \", comment.likes || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Share your opinion...\",\n            className: \"comment-input\",\n            onKeyPress: e => e.key === 'Enter' && handleAddComment()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddComment,\n            className: \"auth-button\",\n            disabled: !newComment.trim(),\n            children: \"Add Opinion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this), selectedElection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedElection.name, \" - Candidates\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidates-grid\",\n            children: selectedElection.candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"candidate-card\",\n              children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n                size: 50,\n                className: \"candidate-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: candidate.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: candidate.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 41\n              }, this), selectedElection.status === \"Closed\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"votes-info\",\n                children: [/*#__PURE__*/_jsxDEV(FaChartBar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 49\n                }, this), \" \", candidate.votes, \" votes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 45\n              }, this) : selectedElection.voters.includes(currentUser.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"voted-label\",\n                children: \"You've voted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"vote-button\",\n                onClick: () => handleVote(candidate.id),\n                children: \"Vote Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 49\n              }, this)]\n            }, candidate.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"auth-button\",\n            onClick: () => setSelectedElection(null),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }, this), editingElection && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Election\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Election Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editingElection.name,\n              onChange: e => setEditingElection({\n                ...editingElection,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editingElection.description,\n              onChange: e => setEditingElection({\n                ...editingElection,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: editingElection.endDate,\n              onChange: e => setEditingElection({\n                ...editingElection,\n                endDate: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"auth-button\",\n              onClick: handleSaveElection,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"auth-button cancel\",\n              onClick: () => setEditingElection(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"ieUdWWFRkUTmuN0KmXs6dR2L9/0=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FaRegCalendarAlt","FaRegFlag","FaRegCommentDots","FaUserCircle","FaChartBar","FaEdit","FaTrash","jsxDEV","_jsxDEV","STATUS_COLORS","Active","Closed","Upcoming","Default","NEWS_API_KEY","Dashboard","_s","navigate","chatEndRef","currentUser","id","name","isAdmin","elections","setElections","saved","localStorage","getItem","JSON","parse","status","description","endDate","candidates","position","votes","voters","selectedElection","setSelectedElection","editingElection","setEditingElection","news","setNews","isLoadingNews","setIsLoadingNews","comments","setComments","newComment","setNewComment","showCandidates","setShowCandidates","chatMessages","setChatMessages","user","message","timestamp","Date","newMessage","setNewMessage","currentTime","setCurrentTime","setItem","stringify","interval","setInterval","clearInterval","fetchNews","response","fetch","data","json","articles","formattedNews","map","article","index","title","imageUrl","urlToImage","url","source","publishedAt","toLocaleDateString","error","console","_chatEndRef$current","current","scrollIntoView","behavior","calculateTimeRemaining","end","diff","days","Math","floor","hours","minutes","getStatusColor","addElection","newElection","now","length","toISOString","split","prev","handleDeleteElection","window","confirm","filter","e","handleSaveElection","handleVote","candidateId","alert","electionIndex","findIndex","election","includes","updatedCandidates","candidate","updatedElection","updatedElections","handleAddComment","trim","commentToAdd","text","likes","handleSendMessage","messageToAdd","handleLikeComment","commentId","comment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","style","borderLeft","color","stopPropagation","item","open","src","alt","msg","toLocaleTimeString","ref","type","value","onChange","target","placeholder","onKeyPress","key","toLocaleString","disabled","_c","$RefreshReg$"],"sources":["/Applications/Maj/Major Project/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaRegCalendarAlt, FaRegFlag, FaRegCommentDots, FaUserCircle, FaChartBar, FaEdit, FaTrash } from \"react-icons/fa\";\nimport \"./Dashboard.css\";\n\nconst STATUS_COLORS = {\n    Active: \"#4CAF50\",\n    Closed: \"#F44336\",\n    Upcoming: \"#2196F3\",\n    Default: \"#9E9E9E\"\n};\n\nconst NEWS_API_KEY = \"8280846cdd1a49ef880809767d0e61c8\";\n\nconst Dashboard = () => {\n    const navigate = useNavigate();\n    const chatEndRef = useRef(null);\n\n    // States\n    const [currentUser] = useState({ id: 1, name: \"Alice Smith\", isAdmin: true });\n    const [elections, setElections] = useState(() => {\n        const saved = localStorage.getItem('elections');\n        return saved ? JSON.parse(saved) : [\n            {\n                id: 1,\n                name: \"Student Council Election\",\n                status: \"Active\",\n                description: \"Vote for your student representatives\",\n                endDate: \"2024-12-20\",\n                candidates: [\n                    { id: 1, name: \"John Doe\", position: \"President\", votes: 145 },\n                    { id: 2, name: \"Jane Smith\", position: \"Vice President\", votes: 120 },\n                ],\n                voters: []\n            },\n            {\n                id: 2,\n                name: \"Company Representative Election\",\n                status: \"Closed\",\n                description: \"Annual company board selection\",\n                endDate: \"2024-11-30\",\n                candidates: [\n                    { id: 3, name: \"Mike Johnson\", position: \"Board Member\", votes: 89 },\n                    { id: 4, name: \"Sarah Williams\", position: \"Board Member\", votes: 92 },\n                ],\n                voters: []\n            },\n        ];\n    });\n\n    const [selectedElection, setSelectedElection] = useState(null);\n    const [editingElection, setEditingElection] = useState(null);\n    const [news, setNews] = useState([]);\n    const [isLoadingNews, setIsLoadingNews] = useState(true);\n    const [comments, setComments] = useState(() => {\n        const saved = localStorage.getItem('comments');\n        return saved ? JSON.parse(saved) : [];\n    });\n    const [newComment, setNewComment] = useState(\"\");\n    const [showCandidates, setShowCandidates] = useState(false);\n    const [chatMessages, setChatMessages] = useState(() => {\n        const saved = localStorage.getItem('chatMessages');\n        return saved ? JSON.parse(saved) : [\n            { id: 1, user: \"System\", message: \"Welcome to the election discussion!\", timestamp: new Date() },\n        ];\n    });\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [currentTime, setCurrentTime] = useState(new Date());\n\n    // LocalStorage persistence\n    useEffect(() => {\n        localStorage.setItem('elections', JSON.stringify(elections));\n    }, [elections]);\n\n    useEffect(() => {\n        localStorage.setItem('comments', JSON.stringify(comments));\n    }, [comments]);\n\n    useEffect(() => {\n        localStorage.setItem('chatMessages', JSON.stringify(chatMessages));\n    }, [chatMessages]);\n\n    // Update time every minute for countdown\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCurrentTime(new Date());\n        }, 60000);\n        return () => clearInterval(interval);\n    }, []);\n\n    // Fetch news effect\n    useEffect(() => {\n        const fetchNews = async () => {\n            setIsLoadingNews(true);\n            try {\n                const response = await fetch(\n                    `https://newsapi.org/v2/everything?q=election&language=en&sortBy=publishedAt&pageSize=6&apiKey=${NEWS_API_KEY}`\n                );\n                const data = await response.json();\n\n                if (data.articles) {\n                    const formattedNews = data.articles.map((article, index) => ({\n                        id: index + 1,\n                        title: article.title,\n                        description: article.description || \"No description available\",\n                        imageUrl: article.urlToImage || \"https://via.placeholder.com/350x200\",\n                        url: article.url,\n                        source: article.source.name,\n                        publishedAt: new Date(article.publishedAt).toLocaleDateString()\n                    }));\n                    setNews(formattedNews);\n                }\n            } catch (error) {\n                console.error(\"Error fetching news:\", error);\n                setNews([{\n                    id: 1,\n                    title: \"Election Updates\",\n                    description: \"Stay informed about the latest election news\",\n                    imageUrl: \"https://via.placeholder.com/350x200\",\n                    source: \"Local News\",\n                    publishedAt: new Date().toLocaleDateString()\n                }]);\n            } finally {\n                setIsLoadingNews(false);\n            }\n        };\n\n        fetchNews();\n    }, []);\n\n    // Scroll chat to bottom effect\n    useEffect(() => {\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, [chatMessages]);\n\n    // Helper functions\n    const calculateTimeRemaining = (endDate) => {\n        const end = new Date(endDate);\n        const diff = end - currentTime;\n\n        if (diff <= 0) return \"Ended\";\n\n        const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n\n        return `${days}d ${hours}h ${minutes}m left`;\n    };\n\n    const getStatusColor = (status) => STATUS_COLORS[status] || STATUS_COLORS.Default;\n\n    // Election management\n    const addElection = () => {\n        const newElection = {\n            id: Date.now(),\n            name: `New Election ${elections.length + 1}`,\n            status: \"Upcoming\",\n            description: \"Click to add description\",\n            endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n            candidates: [],\n            voters: []\n        };\n        setElections(prev => [...prev, newElection]);\n    };\n\n    const handleDeleteElection = (id) => {\n        if (window.confirm(\"Are you sure you want to delete this election?\")) {\n            setElections(prev => prev.filter(e => e.id !== id));\n            if (selectedElection?.id === id) {\n                setSelectedElection(null);\n                setShowCandidates(false);\n            }\n        }\n    };\n\n    const handleSaveElection = () => {\n        setElections(prev =>\n            prev.map(e => e.id === editingElection.id ? editingElection : e)\n        );\n        setEditingElection(null);\n    };\n\n    // Voting functionality\n    const handleVote = (candidateId) => {\n        if (!currentUser) {\n            alert(\"Please log in to vote!\");\n            return;\n        }\n\n        const electionIndex = elections.findIndex(e => e.id === selectedElection.id);\n        if (electionIndex === -1) return;\n\n        const election = elections[electionIndex];\n        if (election.voters.includes(currentUser.id)) {\n            alert(\"You've already voted in this election!\");\n            return;\n        }\n\n        const updatedCandidates = election.candidates.map(candidate =>\n            candidate.id === candidateId\n                ? { ...candidate, votes: candidate.votes + 1 }\n                : candidate\n        );\n\n        const updatedElection = {\n            ...election,\n            candidates: updatedCandidates,\n            voters: [...election.voters, currentUser.id]\n        };\n\n        const updatedElections = [...elections];\n        updatedElections[electionIndex] = updatedElection;\n        setElections(updatedElections);\n        setSelectedElection(updatedElection);\n    };\n\n    // Comment and chat functions\n    const handleAddComment = () => {\n        if (!newComment.trim()) return;\n        const commentToAdd = {\n            id: Date.now(),\n            text: newComment.trim(),\n            user: currentUser.name,\n            timestamp: new Date(),\n            likes: 0\n        };\n        setComments(prev => [...prev, commentToAdd]);\n        setNewComment(\"\");\n    };\n\n    const handleSendMessage = () => {\n        if (!newMessage.trim()) return;\n        const messageToAdd = {\n            id: Date.now(),\n            user: currentUser.name,\n            message: newMessage.trim(),\n            timestamp: new Date()\n        };\n        setChatMessages(prev => [...prev, messageToAdd]);\n        setNewMessage(\"\");\n    };\n\n    const handleLikeComment = (commentId) => {\n        setComments(prev =>\n            prev.map(comment =>\n                comment.id === commentId\n                    ? { ...comment, likes: (comment.likes || 0) + 1 }\n                    : comment\n            )\n        );\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <header>\n                <h1>Decentralized Voting System Dashboard</h1>\n                <div className=\"user-info\">\n                    <FaUserCircle size={24} />\n                    <span>{currentUser.name} {currentUser.isAdmin && \"(Admin)\"}</span>\n                </div>\n            </header>\n\n            <div className=\"dashboard-content\">\n                {/* Elections Section */}\n                <section className=\"election-section\">\n                    <div className=\"section-header\">\n                        <h2>Available Elections</h2>\n                        {currentUser.isAdmin && (\n                            <button className=\"auth-button add-election-btn\" onClick={addElection}>\n                                Add Election\n                            </button>\n                        )}\n                    </div>\n\n                    <div className=\"election-cards\">\n                        {elections.map((election) => (\n                            <div\n                                key={election.id}\n                                className=\"election-card interactive\"\n                                onClick={() => setSelectedElection(election)}\n                                style={{ borderLeft: `5px solid ${getStatusColor(election.status)}` }}\n                            >\n                                <div className=\"election-info\">\n                                    <h3>{election.name}</h3>\n                                    <p className=\"description\">{election.description}</p>\n                                    <div className=\"election-meta\">\n                                        <p className=\"end-date\">\n                                            {calculateTimeRemaining(election.endDate)}\n                                        </p>\n                                        <p className=\"status\" style={{ color: getStatusColor(election.status) }}>\n                                            {election.status}\n                                        </p>\n                                    </div>\n                                </div>\n                                {currentUser.isAdmin && (\n                                    <div className=\"election-actions\">\n                                        <button\n                                            className=\"icon-button\"\n                                            onClick={(e) => {\n                                                e.stopPropagation();\n                                                setEditingElection(election);\n                                            }}\n                                        >\n                                            <FaEdit />\n                                        </button>\n                                        <button\n                                            className=\"icon-button\"\n                                            onClick={(e) => {\n                                                e.stopPropagation();\n                                                handleDeleteElection(election.id);\n                                            }}\n                                        >\n                                            <FaTrash />\n                                        </button>\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n                </section>\n\n                {/* News Section */}\n                <section className=\"news-section\">\n                    <h2>Latest Election News</h2>\n                    <div className=\"news-cards\">\n                        {isLoadingNews ? (\n                            <div className=\"loading\">Loading news...</div>\n                        ) : (\n                            news.map((item) => (\n                                <div\n                                    className=\"news-card\"\n                                    key={item.id}\n                                    onClick={() => window.open(item.url, '_blank')}\n                                >\n                                    <img\n                                        src={item.imageUrl}\n                                        alt={`News about ${item.title}`}\n                                        className=\"news-image\"\n                                    />\n                                    <div className=\"news-content\">\n                                        <h3>{item.title}</h3>\n                                        <p>{item.description}</p>\n                                        <div className=\"news-meta\">\n                                            <span>{item.source}</span>\n                                            <span>{item.publishedAt}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n                </section>\n\n                {/* Chat Section */}\n                <section className=\"chat-section\">\n                    <h2>Live Discussion</h2>\n                    <div className=\"chat-container\">\n                        <div className=\"chat-messages\">\n                            {chatMessages.map((msg) => (\n                                <div key={msg.id} className={`chat-message ${msg.user === \"System\" ? \"system\" : \"\"}`}>\n                                    <strong>{msg.user}:</strong>\n                                    <p>{msg.message}</p>\n                                    <small>{new Date(msg.timestamp).toLocaleTimeString()}</small>\n                                </div>\n                            ))}\n                            <div ref={chatEndRef} />\n                        </div>\n                        <div className=\"chat-input\">\n                            <input\n                                type=\"text\"\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                                placeholder=\"Type your message...\"\n                                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                            />\n                            <button onClick={handleSendMessage} className=\"auth-button\">\n                                Send\n                            </button>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Comments Section */}\n                <section className=\"comments-section\">\n                    <h2>Voter Opinions</h2>\n                    <div className=\"comments-display\">\n                        {comments.map((comment) => (\n                            <div className=\"comment-card\" key={comment.id}>\n                                <div className=\"comment-header\">\n                                    <FaUserCircle className=\"user-avatar\" />\n                                    <span className=\"username\">{comment.user}</span>\n                                    <span className=\"timestamp\">\n                                        {new Date(comment.timestamp).toLocaleString()}\n                                    </span>\n                                </div>\n                                <p>{comment.text}</p>\n                                <div className=\"comment-actions\">\n                                    <button\n                                        className=\"like-button\"\n                                        onClick={() => handleLikeComment(comment.id)}\n                                    >\n                                        👍 {comment.likes || 0}\n                                    </button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"add-comment\">\n                        <input\n                            type=\"text\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                            placeholder=\"Share your opinion...\"\n                            className=\"comment-input\"\n                            onKeyPress={(e) => e.key === 'Enter' && handleAddComment()}\n                        />\n                        <button\n                            onClick={handleAddComment}\n                            className=\"auth-button\"\n                            disabled={!newComment.trim()}\n                        >\n                            Add Opinion\n                        </button>\n                    </div>\n                </section>\n\n                {/* Candidates Modal */}\n                {selectedElection && (\n                    <div className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h2>{selectedElection.name} - Candidates</h2>\n                            <div className=\"candidates-grid\">\n                                {selectedElection.candidates.map(candidate => (\n                                    <div key={candidate.id} className=\"candidate-card\">\n                                        <FaUserCircle size={50} className=\"candidate-avatar\" />\n                                        <h3>{candidate.name}</h3>\n                                        <p>{candidate.position}</p>\n                                        {selectedElection.status === \"Closed\" ? (\n                                            <div className=\"votes-info\">\n                                                <FaChartBar /> {candidate.votes} votes\n                                            </div>\n                                        ) : (\n                                            selectedElection.voters.includes(currentUser.id) ? (\n                                                <div className=\"voted-label\">You've voted</div>\n                                            ) : (\n                                                <button\n                                                    className=\"vote-button\"\n                                                    onClick={() => handleVote(candidate.id)}\n                                                >\n                                                    Vote Now\n                                                </button>\n                                            )\n                                        )}\n                                    </div>\n                                ))}\n                            </div>\n                            <button\n                                className=\"auth-button\"\n                                onClick={() => setSelectedElection(null)}\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                )}\n\n                {/* Edit Election Modal */}\n                {editingElection && (\n                    <div className=\"modal\">\n                        <div className=\"modal-content\">\n                            <h2>Edit Election</h2>\n                            <div className=\"form-group\">\n                                <label>Election Name:</label>\n                                <input\n                                    value={editingElection.name}\n                                    onChange={(e) => setEditingElection({\n                                        ...editingElection,\n                                        name: e.target.value\n                                    })}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Description:</label>\n                                <textarea\n                                    value={editingElection.description}\n                                    onChange={(e) => setEditingElection({\n                                        ...editingElection,\n                                        description: e.target.value\n                                    })}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>End Date:</label>\n                                <input\n                                    type=\"date\"\n                                    value={editingElection.endDate}\n                                    onChange={(e) => setEditingElection({\n                                        ...editingElection,\n                                        endDate: e.target.value\n                                    })}\n                                />\n                            </div>\n                            <div className=\"modal-actions\">\n                                <button className=\"auth-button\" onClick={handleSaveElection}>\n                                    Save Changes\n                                </button>\n                                <button\n                                    className=\"auth-button cancel\"\n                                    onClick={() => setEditingElection(null)}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}