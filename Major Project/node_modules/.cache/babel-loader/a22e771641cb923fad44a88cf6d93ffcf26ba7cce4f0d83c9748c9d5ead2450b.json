{"ast":null,"code":"var _jsxFileName = \"/Applications/Maj/Major Project/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaRegCalendarAlt, FaRegFlag, FaRegCommentDots, FaUserCircle, FaChartBar } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUS_COLORS = {\n  Active: \"#4CAF50\",\n  Closed: \"#F44336\",\n  Upcoming: \"#2196F3\",\n  Default: \"#9E9E9E\"\n};\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const chatEndRef = useRef(null);\n\n  // States\n  const [elections, setElections] = useState([{\n    id: 1,\n    name: \"Student Council Election\",\n    status: \"Active\",\n    description: \"Vote for your student representatives\",\n    endDate: \"2024-12-20\",\n    candidates: [{\n      id: 1,\n      name: \"John Doe\",\n      position: \"President\",\n      votes: 145\n    }, {\n      id: 2,\n      name: \"Jane Smith\",\n      position: \"Vice President\",\n      votes: 120\n    }]\n  }, {\n    id: 2,\n    name: \"Company Representative Election\",\n    status: \"Closed\",\n    description: \"Annual company board selection\",\n    endDate: \"2024-11-30\",\n    candidates: [{\n      id: 3,\n      name: \"Mike Johnson\",\n      position: \"Board Member\",\n      votes: 89\n    }, {\n      id: 4,\n      name: \"Sarah Williams\",\n      position: \"Board Member\",\n      votes: 92\n    }]\n  }]);\n  const [selectedElection, setSelectedElection] = useState(null);\n  const [showCandidates, setShowCandidates] = useState(false);\n  const [news, setNews] = useState([{\n    id: 1,\n    title: \"Election Updates\",\n    description: \"Stay informed about the latest election news\",\n    imageUrl: \"https://via.placeholder.com/350x200\"\n  }]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [chatMessages, setChatMessages] = useState([{\n    id: 1,\n    user: \"System\",\n    message: \"Welcome to the election discussion!\",\n    timestamp: new Date()\n  }]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Effect for scrolling chat to bottom\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [chatMessages]);\n\n  // Function definitions\n  const addElection = () => {\n    const newElection = {\n      id: elections.length + 1,\n      name: `New Election ${elections.length + 1}`,\n      status: \"Upcoming\",\n      description: \"Click to add description\",\n      endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      candidates: []\n    };\n    setElections(prevElections => [...prevElections, newElection]);\n  };\n  const handleElectionClick = election => {\n    setSelectedElection(election);\n    setShowCandidates(true);\n  };\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    const messageToAdd = {\n      id: chatMessages.length + 1,\n      user: \"Current User\",\n      message: newMessage.trim(),\n      timestamp: new Date()\n    };\n    setChatMessages(prevMessages => [...prevMessages, messageToAdd]);\n    setNewMessage(\"\");\n  };\n  const handleAddComment = () => {\n    if (!newComment.trim()) return;\n    const commentToAdd = {\n      id: comments.length + 1,\n      text: newComment.trim(),\n      user: \"Current User\",\n      timestamp: new Date(),\n      likes: 0\n    };\n    setComments(prevComments => [...prevComments, commentToAdd]);\n    setNewComment(\"\");\n  };\n  const getStatusColor = status => {\n    return STATUS_COLORS[status] || STATUS_COLORS.Default;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Decentralized Voting System Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"election-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Elections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auth-button\",\n          onClick: addElection,\n          children: \"Add Election\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"election-cards\",\n        children: elections.map(election => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"election-card\",\n          onClick: () => handleElectionClick(election),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"election-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: election.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description\",\n              children: election.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"end-date\",\n              children: [\"Ends: \", election.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status\",\n              style: {\n                backgroundColor: getStatusColor(election.status),\n                color: 'white'\n              },\n              children: election.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FaRegCalendarAlt, {\n            size: 24,\n            color: getStatusColor(election.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)]\n        }, election.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chat-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Live Discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [chatMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${msg.user === \"System\" ? \"system\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: msg.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: new Date(msg.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\",\n            onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            className: \"auth-button\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voter Opinions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-display\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"username\",\n              children: comment.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: new Date(comment.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Share your opinion...\",\n          className: \"comment-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddComment,\n          className: \"auth-button\",\n          disabled: !newComment.trim(),\n          children: \"Add Opinion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), showCandidates && selectedElection && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedElection.name, \" - Candidates\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"candidates-grid\",\n          children: selectedElection.candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidate-card\",\n            children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n              size: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: candidate.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: candidate.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this), selectedElection.status === \"Closed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"votes-info\",\n              children: [/*#__PURE__*/_jsxDEV(FaChartBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this), \" \", candidate.votes, \" votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this)]\n          }, candidate.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auth-button\",\n          onClick: () => setShowCandidates(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"+LSyonX7r4UqGiMbtvlPpqqNu3E=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FaRegCalendarAlt","FaRegFlag","FaRegCommentDots","FaUserCircle","FaChartBar","jsxDEV","_jsxDEV","STATUS_COLORS","Active","Closed","Upcoming","Default","Dashboard","_s","navigate","chatEndRef","elections","setElections","id","name","status","description","endDate","candidates","position","votes","selectedElection","setSelectedElection","showCandidates","setShowCandidates","news","setNews","title","imageUrl","comments","setComments","newComment","setNewComment","chatMessages","setChatMessages","user","message","timestamp","Date","newMessage","setNewMessage","_chatEndRef$current","current","scrollIntoView","behavior","addElection","newElection","length","now","toISOString","split","prevElections","handleElectionClick","election","handleSendMessage","trim","messageToAdd","prevMessages","handleAddComment","commentToAdd","text","likes","prevComments","getStatusColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","style","backgroundColor","color","size","msg","toLocaleTimeString","ref","type","value","onChange","e","target","placeholder","onKeyPress","key","comment","toLocaleString","disabled","candidate","_c","$RefreshReg$"],"sources":["/Applications/Maj/Major Project/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaRegCalendarAlt, FaRegFlag, FaRegCommentDots, FaUserCircle, FaChartBar } from \"react-icons/fa\";\n\nconst STATUS_COLORS = {\n    Active: \"#4CAF50\",\n    Closed: \"#F44336\",\n    Upcoming: \"#2196F3\",\n    Default: \"#9E9E9E\"\n};\n\nconst Dashboard = () => {\n    const navigate = useNavigate();\n    const chatEndRef = useRef(null);\n    \n    // States\n    const [elections, setElections] = useState([\n        { \n            id: 1, \n            name: \"Student Council Election\", \n            status: \"Active\",\n            description: \"Vote for your student representatives\",\n            endDate: \"2024-12-20\",\n            candidates: [\n                { id: 1, name: \"John Doe\", position: \"President\", votes: 145 },\n                { id: 2, name: \"Jane Smith\", position: \"Vice President\", votes: 120 },\n            ]\n        },\n        { \n            id: 2, \n            name: \"Company Representative Election\", \n            status: \"Closed\",\n            description: \"Annual company board selection\",\n            endDate: \"2024-11-30\",\n            candidates: [\n                { id: 3, name: \"Mike Johnson\", position: \"Board Member\", votes: 89 },\n                { id: 4, name: \"Sarah Williams\", position: \"Board Member\", votes: 92 },\n            ]\n        },\n    ]);\n\n    const [selectedElection, setSelectedElection] = useState(null);\n    const [showCandidates, setShowCandidates] = useState(false);\n    const [news, setNews] = useState([\n        {\n            id: 1,\n            title: \"Election Updates\",\n            description: \"Stay informed about the latest election news\",\n            imageUrl: \"https://via.placeholder.com/350x200\"\n        }\n    ]);\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState(\"\");\n    const [chatMessages, setChatMessages] = useState([\n        { id: 1, user: \"System\", message: \"Welcome to the election discussion!\", timestamp: new Date() }\n    ]);\n    const [newMessage, setNewMessage] = useState(\"\");\n\n    // Effect for scrolling chat to bottom\n    useEffect(() => {\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }, [chatMessages]);\n\n    // Function definitions\n    const addElection = () => {\n        const newElection = {\n            id: elections.length + 1,\n            name: `New Election ${elections.length + 1}`,\n            status: \"Upcoming\",\n            description: \"Click to add description\",\n            endDate: new Date(Date.now() + 30*24*60*60*1000).toISOString().split('T')[0],\n            candidates: []\n        };\n        setElections(prevElections => [...prevElections, newElection]);\n    };\n\n    const handleElectionClick = (election) => {\n        setSelectedElection(election);\n        setShowCandidates(true);\n    };\n\n    const handleSendMessage = () => {\n        if (!newMessage.trim()) return;\n        \n        const messageToAdd = {\n            id: chatMessages.length + 1,\n            user: \"Current User\",\n            message: newMessage.trim(),\n            timestamp: new Date()\n        };\n        \n        setChatMessages(prevMessages => [...prevMessages, messageToAdd]);\n        setNewMessage(\"\");\n    };\n\n    const handleAddComment = () => {\n        if (!newComment.trim()) return;\n        \n        const commentToAdd = {\n            id: comments.length + 1,\n            text: newComment.trim(),\n            user: \"Current User\",\n            timestamp: new Date(),\n            likes: 0\n        };\n        \n        setComments(prevComments => [...prevComments, commentToAdd]);\n        setNewComment(\"\");\n    };\n\n    const getStatusColor = (status) => {\n        return STATUS_COLORS[status] || STATUS_COLORS.Default;\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <header>\n                <h1>Decentralized Voting System Dashboard</h1>\n            </header>\n\n            {/* Elections Section */}\n            <section className=\"election-section\">\n                <div className=\"section-header\">\n                    <h2>Available Elections</h2>\n                    <button className=\"auth-button\" onClick={addElection}>\n                        Add Election\n                    </button>\n                </div>\n\n                <div className=\"election-cards\">\n                    {elections.map((election) => (\n                        <div\n                            key={election.id}\n                            className=\"election-card\"\n                            onClick={() => handleElectionClick(election)}\n                        >\n                            <div className=\"election-info\">\n                                <h3>{election.name}</h3>\n                                <p className=\"description\">{election.description}</p>\n                                <p className=\"end-date\">Ends: {election.endDate}</p>\n                                <span \n                                    className=\"status\"\n                                    style={{ \n                                        backgroundColor: getStatusColor(election.status),\n                                        color: 'white'\n                                    }}\n                                >\n                                    {election.status}\n                                </span>\n                            </div>\n                            <FaRegCalendarAlt size={24} color={getStatusColor(election.status)} />\n                        </div>\n                    ))}\n                </div>\n            </section>\n\n            {/* Chat Section */}\n            <section className=\"chat-section\">\n                <h2>Live Discussion</h2>\n                <div className=\"chat-container\">\n                    <div className=\"chat-messages\">\n                        {chatMessages.map((msg) => (\n                            <div key={msg.id} className={`chat-message ${msg.user === \"System\" ? \"system\" : \"\"}`}>\n                                <strong>{msg.user}</strong>\n                                <p>{msg.message}</p>\n                                <small>{new Date(msg.timestamp).toLocaleTimeString()}</small>\n                            </div>\n                        ))}\n                        <div ref={chatEndRef} />\n                    </div>\n                    <div className=\"chat-input\">\n                        <input\n                            type=\"text\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                            placeholder=\"Type your message...\"\n                            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                        />\n                        <button onClick={handleSendMessage} className=\"auth-button\">\n                            Send\n                        </button>\n                    </div>\n                </div>\n            </section>\n\n            {/* Comments Section */}\n            <section className=\"comments-section\">\n                <h2>Voter Opinions</h2>\n                <div className=\"comments-display\">\n                    {comments.map((comment) => (\n                        <div className=\"comment-card\" key={comment.id}>\n                            <div className=\"comment-header\">\n                                <FaUserCircle size={24} />\n                                <span className=\"username\">{comment.user}</span>\n                                <span className=\"timestamp\">\n                                    {new Date(comment.timestamp).toLocaleString()}\n                                </span>\n                            </div>\n                            <p>{comment.text}</p>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"add-comment\">\n                    <input\n                        type=\"text\"\n                        value={newComment}\n                        onChange={(e) => setNewComment(e.target.value)}\n                        placeholder=\"Share your opinion...\"\n                        className=\"comment-input\"\n                    />\n                    <button\n                        onClick={handleAddComment}\n                        className=\"auth-button\"\n                        disabled={!newComment.trim()}\n                    >\n                        Add Opinion\n                    </button>\n                </div>\n            </section>\n\n            {/* Candidates Modal */}\n            {showCandidates && selectedElection && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h2>{selectedElection.name} - Candidates</h2>\n                        <div className=\"candidates-grid\">\n                            {selectedElection.candidates.map(candidate => (\n                                <div key={candidate.id} className=\"candidate-card\">\n                                    <FaUserCircle size={50} />\n                                    <h3>{candidate.name}</h3>\n                                    <p>{candidate.position}</p>\n                                    {selectedElection.status === \"Closed\" && (\n                                        <div className=\"votes-info\">\n                                            <FaChartBar /> {candidate.votes} votes\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                        <button className=\"auth-button\" onClick={() => setShowCandidates(false)}>\n                            Close\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}